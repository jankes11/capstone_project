# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
jobs:
  build:
    docker:
      # Use the same Docker base as the project
      - image: python:3.7.3-stretch

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found here
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate 
            make lint 

  build_pushImage:
    docker:
      - image: docker:stable
    steps:
      - checkout
      - run:
          name: install curl
          command: |
            apk add --update curl
            
      - setup_remote_docker
      - run:
          name: build docker image
          command: |
            docker build . -t jankes11/capstone-${CIRCLE_WORKFLOW_ID:0:7}
            docker image ls
      - run:
          name: push to dockerhub
          command: |
            docker login -u jankes11 -p yankee1979D! docker.io
            docker tag capstoneProjectfinal/capstone:version1
            docker image push jankes11/capstone-${CIRCLE_WORKFLOW_ID:0:7}

  test-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: <<parameters.cluster-name >>
      - run:
          name: kube cluster
          command: |
            kubectl get services


orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.4.0
 # docker: circleci/docker@2.0.1


workflows:
  deployment:
    jobs:
      - build
      - build_pushImage:
          requires:
            - build
      - test-cluster:
          requires:
            - build_pushImage
          cluster-name: capstoneProj

  